---
openapi: 3.0.1
info:
  title: '52market :: 오늘의 이웃 소식'
  termsOfService: https://52market.shop
  contact:
    name: AndrewDongminYoo
    url: https://github.com/AndrewDongminYoo/52market.shop
    email: ydm2790@gmail.com
  license:
    name: Apache License
    url: http://www.apache.org/licenses/
  version: v1
externalDocs:
  description: Our Wiki
  url: https://github.com/AndrewDongminYoo/52market.shop/wiki
servers:
- url: https://52market.shop
  description: Today Neighbor
paths:
  /api/reviews/{id}:
    get:
      tags:
      - review
      description: 리뷰 id로 가져오기
      operationId: getReviews
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
    put:
      tags:
      - review
      description: 리뷰 변경하기
      operationId: editReview
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
    delete:
      tags:
      - review
      description: 리뷰 삭제하기
      operationId: deleteReview
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/article:
    put:
      tags:
      - article
      description: 게시글 편집
      operationId: editArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
    post:
      tags:
      - article
      description: 게시글 작성
      operationId: writeArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_article_body'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
  /api/reviews:
    post:
      tags:
      - review
      description: 리뷰 저장하기
      operationId: writeReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /api/comments:
    post:
      tags:
      - comment
      description: 댓글 작성
      operationId: writeComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /api/comments/{id}:
    get:
      tags:
      - comment
      description: 댓글 id로 가져오기
      operationId: getComments
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  /api/articles:
    get:
      tags:
      - article
      description: 모든 게시글 가져오기
      operationId: getAllArticles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /api/articles/{query}:
    get:
      tags:
      - article
      description: 게시글 검색
      operationId: getArticles
      parameters:
      - name: query
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /api/comment/{id}:
    delete:
      tags:
      - comment
      description: 댓글 삭제
      operationId: removeComment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/article/{id}:
    delete:
      tags:
      - article
      description: 게시글 삭제
      operationId: removeArticle
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
components:
  schemas:
    Review:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        reviewUser:
          $ref: '#/components/schemas/User'
        reviewTargetUser:
          $ref: '#/components/schemas/User'
        score:
          type: integer
          format: int32
        content:
          type: string
    User:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        socialId:
          type: integer
          format: int64
        email:
          type: string
        picture:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        star:
          type: number
          format: double
        role:
          type: string
          enum:
          - GUEST
          - USER
          - ADMIN
    Article:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        title:
          type: string
        content:
          type: string
        imagePath:
          type: string
        imageName:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    Comment:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        content:
          type: string
        user:
          $ref: '#/components/schemas/User'
    api_article_body:
      type: object
      properties:
        requestDto:
          $ref: '#/components/schemas/Article'
        file:
          type: string
          format: binary
